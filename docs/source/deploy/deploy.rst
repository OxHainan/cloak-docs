
=================================
Deploy Cloak Smart Contract
=================================

--------------
Initialize
--------------
A cloak service includes four components, they are listed below:

* cloak-tee: the core component, which is a CCF app (which is a distributed TEE-based framework),
  deals with Ethereum and cloak transaction from users and synchronizes the results to blockchain.
* cloak-tee-agent: as described above, cloak-tee runs in SGX Enclave(TEE), it is inconvenient to 
  communicate with real world (blockchain, file system, etc.), so cloak-tee-agent is the untrusted 
  part reading cloak-tee log file and communicating with outside.
* PKI Contract: provide the service get PK from address for encryption and decryption.
* cloak service contract: provide some useful functions that include tee address register, 
  verification of synchronization.

deploy PKI and  cloak service contract
***************************************
The two contracts is be generated by Cloak compiler, so you need to install compiler, see: 
`Installation <https://oxhainan-cloak-docs.readthedocs-hosted.com/en/latest/started/quick-start.html#installation>`__

They are stardard Solidity contract, you can use web3 to deploy it, or any way what you want. 
Cloak compiler provide two commands to deploy it, you can use it too, for examples:

.. code::

     python cloak/__main__.py deploy-pki <SENDER ADDRESS> --blockchain-backend w3-ganache --blockchain-node-uri http://127.0.0.1:8545
     python cloak/__main__.py deploy-service <SENDER ADDRESS> --blockchain-backend w3-ganache --blockchain-node-uri http://127.0.0.1:8545

deploy cloak-tee
**********************
cloak-tee is a CCF app, compile and run it just like a stardard CFF app.

first of all, you need a CCF-0.15.2 environment, see: `CCF Development 
Setup <https://microsoft.github.io/CCF/main/build_apps/build_setup.html>`__, but it is complicated, so we recommend you use Dcoker setup it:

.. code-block::

   docker pull plytools/circleci-cloak-tee:v0.2.0

get cloak-tee code in Docker:

.. code-block::

    git clone https://github.com/OxHainan/cloak-tee.git
    cd cloak-tee

build:

.. code-block::

    mkdir build && cd build
    cmake .. -GNinja
    ninja

run:

.. code-block::

    /opt/ccf-0.15.2/bin/sandbox.sh -p libevm4ccf.virtual.so

after run cloak-tee:

ownership and examples

uint
mapping
address
...


----------------------------
Deploy to Blockchain
----------------------------

deploy the generated smart contracts to a blockchain


----------------------------
Deploy to Cloak Network
----------------------------

deploy the generated smart contracts to the Cloak Network


----------------------------
Transact with Cloak Client
----------------------------

deploy the generated smart contracts to the Cloak Network



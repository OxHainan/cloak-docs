=======================================
Initialize Cloak Network on Blockchain
=======================================

A cloak service includes four components, they are listed below:

* cloak-tee: the core component, which is a `CCF <https://github.com/microsoft/CCF>`__ app that runs in a TEE environment,
  deals with Ethereum and cloak transaction from users and synchronizes the results to blockchain.
* cloak-tee-agent: as described above, cloak-tee runs in SGX Enclave(TEE), it is inconvenient to 
  communicate with the real-world (blockchain, file system, etc.), so cloak-tee-agent is the untrusted 
  part that reads cloak-tee log file and communicates with outside.
* PKI Contract: provide the service to get PK from address for encryption and decryption.
* cloak service contract: provide some useful functions that include tee address register, 
  verification of synchronization.

Deploy PKI and Cloak Service Contract
***************************************
The two contracts is be generated by **Cloak-Compiler**, so you need to install compiler in advance, see: 
`Installation <https://oxhainan-cloak-docs.readthedocs-hosted.com/en/latest/started/quick-start.html#installation>`__

They are standard Solidity contracts, you can use web3 to deploy them, or anyway what you want. 
**Cloak-Compiler** provides two commands to deploy them, you can use it too, *e.g.*, ganache, an Ethereum network, you can change it depending on your need:

.. code::

     python cloak/__main__.py deploy-pki <SENDER ADDRESS> --blockchain-backend w3-ganache --blockchain-node-uri http://127.0.0.1:8545
     python cloak/__main__.py deploy-service <SENDER ADDRESS> --blockchain-backend w3-ganache --blockchain-node-uri http://127.0.0.1:8545

Build Cloak-Tee
**********************
Cloak-Tee is a CCF App, compile and run it just like a standard CFF App.

First of all, you need a CCF-0.15.2 environment, see: `CCF Development Setup <https://microsoft.github.io/CCF/main/build_apps/build_setup.html>`__, but it is complicated, we recommend you use Dcoker to setup it:

.. code-block::

   docker pull plytools/circleci-cloak-tee:v0.2.0

Get Cloak-Tee code in Docker:

.. code-block::

    git clone --recurse-submodules https://github.com/OxHainan/cloak-tee.git
    cd cloak-tee

Build:

.. code-block::

    mkdir build && cd build
    cmake .. -GNinja
    ninja

Setup Cloak Service
**********************
After building, the next steps are to run Cloak-Tee, Cloak-Tee-Agent and prepare Cloak-Tee, you can use Cloak manager script to do those things.

The Cloak manager directory is CLOAK-TEE-PROJECT/agent, install dependencies

.. code::

   cd ../agent
   pip install -r requirements.txt

Setup cloak service:

.. code::

   python cloak.py setup-cloak-service --build-path <CLOAK-TEE BUILD PATH> --cloak-service-address <CLOAK SERVICE ADDRESS> --pki-address <PKI ADDRESS> --blockchain-http-uri <BLOCKCHAIN-HTTP-URI>

The `build-path` option is the path that you built cloak-tee.

If you want to develop or test Cloak-Tee, ganache-cli may be a good choice as a blockchain backend, after installed ganache and started it, The `--blockchain-http-uri` option should be `http://127.0.0.1:8545`
